services:
  redis:
    image: redis/redis-stack:latest
    container_name: my_redis
    ports:
      - '6379:6379'
      - '8001:8001'
    volumes:
      - redis_data:/data
    restart: always
  
  couchbase:
    build:
      context: .
      dockerfile: Dockerfile.couchbase
    container_name: my_couchbase
    ports:
      - "8091-8097:8091-8097" 
      - "11210:11210"        
    environment:
      - CB_CLUSTER_USERNAME=Administrator
      - CB_CLUSTER_PASSWORD=password
      - CB_CLUSTER_RAMSIZE=256
      - CB_CLUSTER_INDEX_RAMSIZE=256
      - CB_CLUSTER_FTS_RAMSIZE=256
      - CB_CLUSTER_QUERY_RAMSIZE=256
      - CB_CLUSTER_ANALYTICS_RAMSIZE=1024
      - CB_CLUSTER_EVENTING_RAMSIZE=256
      - CB_CLUSTER_BUCKET_DEFAULT_RAMSIZE=256
      - CB_CLUSTER_SERVICES=data,index,query,fts,analytics,eventing
    volumes:
      - couchbase-data:/opt/couchbase/var
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8091/pools/default"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: always

  webserver:
    build:
      context: .
      dockerfile: Dockerfile.webServer
    container_name: my_web_server
    ports:
      - '3000:3000'
    environment:
      PORT: 3000
      REDIS_HOST: redis
      REDIS_PORT: 6379
      COUCHBASE_HOST: couchbase
      COUCHBASE_PORT: 11210
      COUCHBASE_USERNAME: Administrator
      COUCHBASE_PASSWORD: password
      SUCCESS_VECTOR_MATCH_THRESHOLD: 0.4
      NODE_ENV: local
    env_file:
      - .env
    depends_on:
      - redis
      - couchbase
    restart: always
    deploy: 
      replicas: 1

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: my_worker
    environment:
      REDIS_HOST: redis 
      REDIS_PORT: 6379
      COUCHBASE_HOST: couchbase
      COUCHBASE_PORT: 11210
      COUCHBASE_USERNAME: Administrator 
      COUCHBASE_PASSWORD: password
      CORES_PER_CPP_PROCESS: 1
      NODE_ENV: local
    env_file:
      - .env
    depends_on:
      - redis
      - couchbase
    restart: always
    deploy: 
      replicas: 1

networks:
  couchbase-net:
    driver: bridge

volumes:
  redis_data:
  couchbase-data:
    driver: local
